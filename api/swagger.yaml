---
swagger: "2.0"
info:
  description: "TodoAPI for React sample App."
  version: "1.0.0"
  title: "TodoAPI"
schemes:
- "http"
paths:
  /todos:
    get:
      summary: "Get all todos"
      description: ""
      operationId: "getTodos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Todo"
        404:
          description: "Todo not found"
      x-swagger-router-controller: "Default"
  /todo:
    post:
      summary: "Add a new todo"
      description: ""
      operationId: "addTodo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Todo object that needs to be added to the db"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Default"
    put:
      summary: "Update an existing todo"
      description: ""
      operationId: "updateTodo"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Todo object that needs to be added to the db"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Todo not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "Default"
  /todo/{todoId}:
    get:
      summary: "Find todo by ID"
      description: "Returns a single todo"
      operationId: "getTodoById"
      produces:
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Todo"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Todo not found"
      x-swagger-router-controller: "Default"
    post:
      summary: "Updates a pet in the store with form data"
      description: ""
      operationId: "updateTodoWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: "ID of todo that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "title"
        in: "formData"
        description: "Updated title of the todo"
        required: true
        type: "string"
      - name: "done"
        in: "formData"
        description: "Updated status of the todo"
        required: false
        type: "boolean"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "Default"
    delete:
      summary: "Deletes a todo"
      description: ""
      operationId: "deleteTodo"
      produces:
      - "application/json"
      parameters:
      - name: "todoId"
        in: "path"
        description: "Todo id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Todo not found"
      x-swagger-router-controller: "Default"
definitions:
  Todo:
    type: "object"
    properties:
      id:
        type: "number"
      title:
        type: "string"
      done:
        type: "boolean"
    example:
      id: 0.80082819046101150206595775671303272247314453125
      title: "title"
      done: true
